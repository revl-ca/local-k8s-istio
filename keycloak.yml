---
apiVersion: v1
kind: Namespace
metadata:
  name: keycloak
  labels:
    istio-injection: disabled

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: vs-keycloak
  namespace: default
spec:
  gateways: ['test-gateway']
  hosts: ['keycloak.keycloak.svc.cluster.local']
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: keycloak.keycloak.svc.cluster.local
        port:
          number: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: keycloak
  labels:
    app: keycloak
spec:
  selector:
    app: keycloak
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: http

---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-headless
  namespace: keycloak
  labels:
    app: keycloak
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: keycloak
  ports:
  - name: jgroups
    port: 7600
    protocol: TCP
    targetPort: jgroups

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: vs-keycloak
  namespace: default
spec:
  gateways: ['test-gateway']
  hosts: ['keycloak.keycloak.svc.cluster.local']
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: keycloak.keycloak.svc.cluster.local
        port:
          number: 8080

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keycloak
  namespace: keycloak

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: keycloak-view
  namespace: keycloak
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- kind: ServiceAccount
  name: keycloak

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: keycloak-viewer
  namespace: keycloak
rules:
- apiGroups: ['']
  resources: ['pods']
  verbs: ['list', 'get']

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak
  namespace: keycloak
spec:
  replicas: 1
  serviceName: keycloak-headless
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      restartPolicy: Always
      serviceAccountName: keycloak
      containers:
      - image: jboss/keycloak:11.0.3
        imagePullPolicy: Always
        name: keycloak
        env:
        - name: KEYCLOAK_USER
          value: 'admin'
        - name: KEYCLOAK_PASSWORD
          value: 'admin'
        - name: KUBERNETES_LABELS
          value: app=keycloak
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: JGROUPS_DISCOVERY_PROTOCOL
          value: kubernetes.KUBE_PING
        - name: JGROUPS_DISCOVERY_PROPERTIES
          value: 'namespace=keycloak'
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: PROXY_ADDRESS_FORWARDING
          value: 'true'
        livenessProbe:
          httpGet:
            path: /auth/
            port: http
          initialDelaySeconds: 120
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /auth/realms/master
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 1
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP

